######################################
#  rng application config file  #
######################################

ring {
  quorum=[3,2,2]  //N,R,W
  # Single node quorum
  # quorum = [1,1,1]
  buckets=1024
  virtual-nodes=128
  sync_interval=1000
  hashLength=32
  ring-node-name="ring_node"
  
  leveldb {
    native = true
    dir = "data"
    //number-of-tables=256 just the reminder of dets
    checksum = false
    fsync = false
  }

  # docker related node configuration
  # bases on docker env variables:
  # ?KAI_IP - evaluated in docker entry point
  # ?SEED_XX - refers to hardcoded docker node name 'seed'
  ip = "127.0.0.1"
  ip = ${?KAI_IP}
  port = 4334
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?KAI_IP}
  seed-ip = ${?SEED_PORT_4334_TCP_ADDR}
  seed-port = 4334
  seed-port = ${?SEED_PORT_4334_TCP_PORT}
  cluster.name = rng
}


## rng application config
akka {
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  jvm-exit-on-fatal-error = false
  loglevel = info
  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }
  }

  remote.netty.tcp.hostname=${ring.ip}
  remote.netty.tcp.port=${ring.port}
  #remote.log-remote-lifecycle-events = off

  cluster {
    seed-nodes = [
      "akka.tcp://"${ring.cluster.name}"@"${ring.seed-ip}":"${ring.seed-port}
    ],
    roles=["ring_node"]
  }

    #akka.cluster.metrics.enabled=off
    #akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
    # Sigar native library extract location during tests.
    # Note: use per-jvm-instance folder when running multiple jvm on one host.
    #akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native


  }
