######################################
#  rng application config file       #
######################################

ring {
  quorum=[1,1,1]  //N,R,W
  buckets=1024
  virtual-nodes=128
  hashLength=32
  ring-node-name="ring_node"
  gather-timeout = 5
  leveldb {
    native = true
    dir = "rng_data_"${akka.remote.netty.tcp.hostname}"_"${akka.remote.netty.tcp.port}
    checksum = false
    fsync = false
  }
  # docker related node configuration
  # bases on docker env variables:
  # ?KAI_IP - evaluated in docker entry point
  # ?SEED_XX - refers to hardcoded docker node name 'seed'
  ip = "127.0.0.1"
  ip = ${?KAI_IP}
  port = 4334
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?KAI_IP}
  seed-ip = ${?SEED_PORT_4334_TCP_ADDR}
  seed-port = 4334
  seed-port = ${?SEED_PORT_4334_TCP_PORT}
  cluster.name = rng
}
## rng application config
akka {
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  jvm-exit-on-fatal-error = false
  loglevel = info
  log-config-on-start = off

  actor {
    deployment {
      /readonly_store {
        router = round-robin-pool
        nr-of-instances = 10
      }
    }
    
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }
  }

  remote.netty.tcp.hostname=${ring.ip}
  remote.netty.tcp.port=${ring.port}

  cluster {
    seed-nodes = [
      "akka.tcp://"${ring.cluster.name}"@"${ring.seed-ip}":"${ring.seed-port}
    ],
    roles=["ring_node"]
    auto-down-unreachable-after = off
  }
}
