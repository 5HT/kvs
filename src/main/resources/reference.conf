#
# Defaults for the KVS database.
#
kvs {
  # KVS storage
  # Backend storage engine of KVS abstract scala types storage.
  # mem       - for memory
  # fs        - for file system
  # sql       - for SQL
  # leveldb   - for leveldb
  # rng       - for RNG distributed consistent hash storage
  store="mws.kvs.store.Ring"

  # KVS System Feeds
  # The containers for holding the system maintaned feeds to create on startup.
  # Some kind of db schema. Possible values (maybe fqcns?):
  # - users
  # - groups
  # - games
  # - products
  # - rooms
  # - etc.
  # Property may be moved to Feeds Server.
  feeds=["users"]
}

######################################
#  rng application config file       #
######################################

ring {
  quorum = [1, 1, 1]  //N,R,W
  buckets = 1024
  virtual-nodes = 128
  hashLength = 32
  gather-timeout = 3
  leveldb {
    dir = "rng_data_"${akka.remote.netty.tcp.hostname}"_"${akka.remote.netty.tcp.port}
    fsync = false
  }
}

akka {
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  jvm-exit-on-fatal-error = false
  loglevel = info
  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    deployment {
      /ring_readonly_store {
        router = round-robin-pool
        nr-of-instances = 5
      }
    }
    debug {
      receive = off
      lifecycle = off
    }
  }
}
